/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoestructura;

import java.awt.Event;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JTable;

/**
 *
 * @author Asus Pc
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    //LinkedList<Campo> lista = new LinkedList();
    Campo campos = new Campo();
    Archivo archivo = new Archivo();
    //DoblementeEnlazada lista = new DoblementeEnlazada();
    ArrayList<Campo> listaCamps = new ArrayList();
    ArrayList<Registro> listaRegis = new ArrayList();
    LinkedList<Object> AvaiList = new LinkedList();
    DefaultTableModel tablemodel;
    String nombre_Achivo = "";
    ArrayList<JLabel> labels = new ArrayList();
    ArrayList<JTextField> fields = new ArrayList();
    ArrayList<JLabel> labels2 = new ArrayList();
    ArrayList<JTextField> fields2 = new ArrayList();
    DefaultTableModel modelo = new DefaultTableModel();
    int eliminado = 0;
    int filas1 = 0;

    public Ventana() {

        initComponents();

        jm_BorrarCampos.setEnabled(false);
        jm_ListarCampos.setEnabled(false);
        jm_ModificarCampos.setEnabled(false);
        jm_CrearCampos.setEnabled(false);
        jm_IntroducirRegistros.setEnabled(false);
        jm_BorrarRegistros.setEnabled(false);
        jm_ListarRegistros.setEnabled(false);
        jm_ModificarRegistros.setEnabled(false);
        jm_BuscarRegistros.setEnabled(false);
        jm_CrearIndice.setEnabled(false);
        jm_IndexarArchivos.setEnabled(false);
        jm_ExportarExcel.setEnabled(false);
        jm_ExportarXML.setEnabled(false);
        jm_SalvarArchivo.setEnabled(false);
        jm_CerrarArchivo.setEnabled(false);

        labels.add(jl0);
        labels.add(jl1);
        labels.add(jl2);
        labels.add(jl3);
        labels.add(jl4);
        labels.add(jl5);
        labels.add(jl6);
        labels.add(jl7);
        labels.add(jl8);
        labels.add(jl9);
        labels2.add(jl10);
        labels2.add(jl11);
        labels2.add(jl12);
        labels2.add(jl13);
        labels2.add(jl14);
        labels2.add(jl15);
        labels2.add(jl16);
        labels2.add(jl17);
        labels2.add(jl18);
        labels2.add(jl19);
        fields.add(jt0);
        fields.add(jt1);
        fields.add(jt2);
        fields.add(jt3);
        fields.add(jt4);
        fields.add(jt5);
        fields.add(jt6);
        fields.add(jt7);
        fields.add(jt8);
        fields.add(jt9);
        fields2.add(jt10);
        fields2.add(jt11);
        fields2.add(jt12);
        fields2.add(jt13);
        fields2.add(jt14);
        fields2.add(jt15);
        fields2.add(jt16);
        fields2.add(jt17);
        fields2.add(jt18);
        fields2.add(jt19);

        for (int i = 0; i < labels.size(); i++) {
            labels.get(i).setVisible(false);
            labels.get(i).setEnabled(false);
            labels2.get(i).setVisible(false);
            labels2.get(i).setEnabled(false);
        }
        for (int i = 0; i < fields.size(); i++) {
            fields.get(i).setVisible(false);
            fields.get(i).setEnabled(false);
            fields2.get(i).setVisible(false);
            fields2.get(i).setEnabled(false);
        }

//         jmi_login.setVisible(false);
//        jmi_logina.setVisible(false);
//        jmi_parte.setVisible(false);
//        jmi_parte2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        Jd_InsertarCampos = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_NombreCampo = new javax.swing.JTextField();
        cbb_tipoCampo = new javax.swing.JComboBox<>();
        cbb_llaveCampo = new javax.swing.JComboBox<>();
        txt_TamanoCapo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Jd_CreaArchivo = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        txt_nombreArchivo = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        Jd_ListarCampos = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Lista = new javax.swing.JTable();
        jd_IntoRegistros = new javax.swing.JDialog();
        jButton3 = new javax.swing.JButton();
        jl0 = new javax.swing.JLabel();
        jl1 = new javax.swing.JLabel();
        jl2 = new javax.swing.JLabel();
        jl3 = new javax.swing.JLabel();
        jl4 = new javax.swing.JLabel();
        jl5 = new javax.swing.JLabel();
        jl6 = new javax.swing.JLabel();
        jl7 = new javax.swing.JLabel();
        jl8 = new javax.swing.JLabel();
        jl9 = new javax.swing.JLabel();
        jt0 = new javax.swing.JTextField();
        jt1 = new javax.swing.JTextField();
        jt2 = new javax.swing.JTextField();
        jt3 = new javax.swing.JTextField();
        jt4 = new javax.swing.JTextField();
        jt5 = new javax.swing.JTextField();
        jt6 = new javax.swing.JTextField();
        jt7 = new javax.swing.JTextField();
        jt8 = new javax.swing.JTextField();
        jt9 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_paraRegistros = new javax.swing.JTable();
        jd_BorrarCampops = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tabla_Lista1 = new javax.swing.JTable();
        jb_borrar = new javax.swing.JButton();
        jd_ModificarCampos = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_NombreCampo1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_TamanoCapo1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbb_tipoCampo1 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cbb_llaveCampo1 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        cb_modcampos = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jd_InsertarRegistros = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jd_ModificarRegistros = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        jl10 = new javax.swing.JLabel();
        jt10 = new javax.swing.JTextField();
        jl11 = new javax.swing.JLabel();
        jt11 = new javax.swing.JTextField();
        jl12 = new javax.swing.JLabel();
        jt12 = new javax.swing.JTextField();
        jl13 = new javax.swing.JLabel();
        jt13 = new javax.swing.JTextField();
        jl14 = new javax.swing.JLabel();
        jt14 = new javax.swing.JTextField();
        jl15 = new javax.swing.JLabel();
        jt15 = new javax.swing.JTextField();
        jl16 = new javax.swing.JLabel();
        jt16 = new javax.swing.JTextField();
        jl17 = new javax.swing.JLabel();
        jt17 = new javax.swing.JTextField();
        jl18 = new javax.swing.JLabel();
        jt18 = new javax.swing.JTextField();
        jl19 = new javax.swing.JLabel();
        jt19 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_ModificarRegistros = new javax.swing.JTable();
        jd_ListarRegistros = new javax.swing.JDialog();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jt_listarRegistros = new javax.swing.JTable();
        jd_BorrarRegistros = new javax.swing.JDialog();
        jLabel17 = new javax.swing.JLabel();
        jb_borrarRegis = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jt_EliminarRegistros = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jm_SalvarArchivo = new javax.swing.JMenuItem();
        jm_CerrarArchivo = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jm_CrearCampos = new javax.swing.JMenuItem();
        jm_ListarCampos = new javax.swing.JMenuItem();
        jm_ModificarCampos = new javax.swing.JMenuItem();
        jm_BorrarCampos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jm_IntroducirRegistros = new javax.swing.JMenuItem();
        jm_ModificarRegistros = new javax.swing.JMenuItem();
        jm_BuscarRegistros = new javax.swing.JMenuItem();
        jm_BorrarRegistros = new javax.swing.JMenuItem();
        jm_ListarRegistros = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jm_CrearIndice = new javax.swing.JMenuItem();
        jm_IndexarArchivos = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jm_ExportarExcel = new javax.swing.JMenuItem();
        jm_ExportarXML = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenuItem1.setText("jMenuItem1");

        jButton1.setText("Insertar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre del Campo");

        jLabel2.setText("Tamaño del Campo");

        jLabel3.setText("Tipo");

        jLabel4.setText("Llave Primaria");

        cbb_tipoCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Int", "Double", " " }));
        cbb_tipoCampo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_tipoCampoItemStateChanged(evt);
            }
        });
        cbb_tipoCampo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbb_tipoCampoKeyPressed(evt);
            }
        });

        cbb_llaveCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Si", " " }));

        txt_TamanoCapo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TamanoCapoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Crear Campo");

        javax.swing.GroupLayout Jd_InsertarCamposLayout = new javax.swing.GroupLayout(Jd_InsertarCampos.getContentPane());
        Jd_InsertarCampos.getContentPane().setLayout(Jd_InsertarCamposLayout);
        Jd_InsertarCamposLayout.setHorizontalGroup(
            Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Jd_InsertarCamposLayout.createSequentialGroup()
                .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Jd_InsertarCamposLayout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel5))
                    .addGroup(Jd_InsertarCamposLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Jd_InsertarCamposLayout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addGap(114, 114, 114)
                .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_TamanoCapo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbb_llaveCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbb_tipoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_NombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(146, 146, 146))
        );
        Jd_InsertarCamposLayout.setVerticalGroup(
            Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Jd_InsertarCamposLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addGap(53, 53, 53)
                .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Jd_InsertarCamposLayout.createSequentialGroup()
                        .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_NombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbb_tipoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(21, 21, 21)
                .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_TamanoCapo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Jd_InsertarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbb_llaveCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(jButton1)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jLabel6.setText("Nombre");

        txt_nombreArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreArchivoActionPerformed(evt);
            }
        });

        jButton2.setText("Crear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Jd_CreaArchivoLayout = new javax.swing.GroupLayout(Jd_CreaArchivo.getContentPane());
        Jd_CreaArchivo.getContentPane().setLayout(Jd_CreaArchivoLayout);
        Jd_CreaArchivoLayout.setHorizontalGroup(
            Jd_CreaArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Jd_CreaArchivoLayout.createSequentialGroup()
                .addGroup(Jd_CreaArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Jd_CreaArchivoLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel6)
                        .addGap(84, 84, 84)
                        .addComponent(txt_nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Jd_CreaArchivoLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jButton2)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        Jd_CreaArchivoLayout.setVerticalGroup(
            Jd_CreaArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Jd_CreaArchivoLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(Jd_CreaArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        Tabla_Lista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Llave Primaria", "Nombre", "Tamano", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(Tabla_Lista);

        javax.swing.GroupLayout Jd_ListarCamposLayout = new javax.swing.GroupLayout(Jd_ListarCampos.getContentPane());
        Jd_ListarCampos.getContentPane().setLayout(Jd_ListarCamposLayout);
        Jd_ListarCamposLayout.setHorizontalGroup(
            Jd_ListarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Jd_ListarCamposLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        Jd_ListarCamposLayout.setVerticalGroup(
            Jd_ListarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Jd_ListarCamposLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jd_IntoRegistros.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                jd_IntoRegistrosWindowOpened(evt);
            }
        });

        jButton3.setText("Insertar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jl0.setText("jLabel14");

        jl1.setText("jLabel15");

        jl2.setText("jLabel16");

        jl3.setText("jLabel17");

        jl4.setText("jLabel18");

        jl5.setText("jLabel19");

        jl6.setText("jLabel20");

        jl7.setText("jLabel21");

        jl8.setText("jLabel22");

        jl9.setText("jLabel23");

        jt0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt0KeyTyped(evt);
            }
        });

        jt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt1KeyTyped(evt);
            }
        });

        jt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt2KeyTyped(evt);
            }
        });

        jt3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt3KeyTyped(evt);
            }
        });

        jt4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt4KeyTyped(evt);
            }
        });

        jt5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt5KeyTyped(evt);
            }
        });

        jt6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt6KeyTyped(evt);
            }
        });

        jt7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt7KeyTyped(evt);
            }
        });

        jt8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt8KeyTyped(evt);
            }
        });

        jt9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt9KeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Ingresar Registros");

        jt_paraRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jt_paraRegistros);

        javax.swing.GroupLayout jd_IntoRegistrosLayout = new javax.swing.GroupLayout(jd_IntoRegistros.getContentPane());
        jd_IntoRegistros.getContentPane().setLayout(jd_IntoRegistrosLayout);
        jd_IntoRegistrosLayout.setHorizontalGroup(
            jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jButton3)
                .addContainerGap(502, Short.MAX_VALUE))
            .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl9)
                        .addGap(49, 49, 49)
                        .addComponent(jt9))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl8)
                        .addGap(49, 49, 49)
                        .addComponent(jt8))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl0)
                        .addGap(49, 49, 49)
                        .addComponent(jt0, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl1)
                        .addGap(49, 49, 49)
                        .addComponent(jt1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl2)
                        .addGap(49, 49, 49)
                        .addComponent(jt2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl3)
                        .addGap(49, 49, 49)
                        .addComponent(jt3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl4)
                        .addGap(49, 49, 49)
                        .addComponent(jt4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl5)
                        .addGap(49, 49, 49)
                        .addComponent(jt5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl6)
                        .addGap(49, 49, 49)
                        .addComponent(jt6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_IntoRegistrosLayout.createSequentialGroup()
                        .addComponent(jl7)
                        .addGap(49, 49, 49)
                        .addComponent(jt7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_IntoRegistrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(318, 318, 318))
        );
        jd_IntoRegistrosLayout.setVerticalGroup(
            jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                .addGap(23, 498, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
            .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(5, 5, 5)
                .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl0)
                    .addComponent(jt0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl1)
                            .addComponent(jt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl2)
                            .addComponent(jt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl3)
                            .addComponent(jt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl4)
                            .addComponent(jt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl5)
                            .addComponent(jt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl6)
                            .addComponent(jt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl7)
                            .addComponent(jt7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl8)
                            .addComponent(jt8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jd_IntoRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl9)
                            .addComponent(jt9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jd_IntoRegistrosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tabla_Lista1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Llave Primaria", "Nombre", "Tamano", "Tipo"
            }
        ));
        jScrollPane3.setViewportView(Tabla_Lista1);

        jb_borrar.setText("Borrar");
        jb_borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_borrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_BorrarCampopsLayout = new javax.swing.GroupLayout(jd_BorrarCampops.getContentPane());
        jd_BorrarCampops.getContentPane().setLayout(jd_BorrarCampopsLayout);
        jd_BorrarCampopsLayout.setHorizontalGroup(
            jd_BorrarCampopsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_BorrarCampopsLayout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jb_borrar)
                .addContainerGap(267, Short.MAX_VALUE))
            .addGroup(jd_BorrarCampopsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jd_BorrarCampopsLayout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(57, Short.MAX_VALUE)))
        );
        jd_BorrarCampopsLayout.setVerticalGroup(
            jd_BorrarCampopsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_BorrarCampopsLayout.createSequentialGroup()
                .addContainerGap(365, Short.MAX_VALUE)
                .addComponent(jb_borrar)
                .addGap(31, 31, 31))
            .addGroup(jd_BorrarCampopsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jd_BorrarCampopsLayout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(63, Short.MAX_VALUE)))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Modificar Campo");

        jLabel9.setText("Nombre del Campo");

        jLabel10.setText("Tamaño del Campo");

        txt_TamanoCapo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TamanoCapo1KeyTyped(evt);
            }
        });

        jLabel11.setText("Tipo");

        cbb_tipoCampo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Int", "Double", " " }));

        jLabel12.setText("Llave Primaria");

        cbb_llaveCampo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Si", " " }));

        jButton5.setText("Modificar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        cb_modcampos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb_modcampos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_modcamposItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Campos disponibles");

        javax.swing.GroupLayout jd_ModificarCamposLayout = new javax.swing.GroupLayout(jd_ModificarCampos.getContentPane());
        jd_ModificarCampos.getContentPane().setLayout(jd_ModificarCamposLayout);
        jd_ModificarCamposLayout.setHorizontalGroup(
            jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jButton5))
                            .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cb_modcampos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                                    .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel10))
                                    .addGap(114, 114, 114)
                                    .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbb_llaveCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbb_tipoCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_NombreCampo1)
                                        .addComponent(txt_TamanoCapo1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel13)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jd_ModificarCamposLayout.setVerticalGroup(
            jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_ModificarCamposLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel8)
                .addGap(51, 51, 51)
                .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cb_modcampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_NombreCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_ModificarCamposLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_ModificarCamposLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_TamanoCapo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(cbb_tipoCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbb_llaveCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(jButton5)
                .addGap(64, 64, 64))
        );

        jLabel7.setText("Insertar Registro");

        javax.swing.GroupLayout jd_InsertarRegistrosLayout = new javax.swing.GroupLayout(jd_InsertarRegistros.getContentPane());
        jd_InsertarRegistros.getContentPane().setLayout(jd_InsertarRegistrosLayout);
        jd_InsertarRegistrosLayout.setHorizontalGroup(
            jd_InsertarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_InsertarRegistrosLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel7)
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jd_InsertarRegistrosLayout.setVerticalGroup(
            jd_InsertarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_InsertarRegistrosLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel7)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Modificar Registros");

        jl10.setText("jLabel14");

        jt10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt10KeyTyped(evt);
            }
        });

        jl11.setText("jLabel15");

        jt11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt11KeyTyped(evt);
            }
        });

        jl12.setText("jLabel16");

        jt12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt12KeyTyped(evt);
            }
        });

        jl13.setText("jLabel17");

        jt13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt13KeyTyped(evt);
            }
        });

        jl14.setText("jLabel18");

        jt14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt14KeyTyped(evt);
            }
        });

        jl15.setText("jLabel19");

        jt15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt15KeyTyped(evt);
            }
        });

        jl16.setText("jLabel20");

        jt16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt16KeyTyped(evt);
            }
        });

        jl17.setText("jLabel21");

        jt17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt17KeyTyped(evt);
            }
        });

        jl18.setText("jLabel22");

        jt18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt18KeyTyped(evt);
            }
        });

        jl19.setText("jLabel23");

        jt19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jt19KeyTyped(evt);
            }
        });

        jButton4.setText("Insertar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jt_ModificarRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jt_ModificarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_ModificarRegistrosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jt_ModificarRegistros);

        javax.swing.GroupLayout jd_ModificarRegistrosLayout = new javax.swing.GroupLayout(jd_ModificarRegistros.getContentPane());
        jd_ModificarRegistros.getContentPane().setLayout(jd_ModificarRegistrosLayout);
        jd_ModificarRegistrosLayout.setHorizontalGroup(
            jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl19)
                                .addGap(49, 49, 49)
                                .addComponent(jt19))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl18)
                                .addGap(49, 49, 49)
                                .addComponent(jt18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl10)
                                .addGap(49, 49, 49)
                                .addComponent(jt10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl11)
                                .addGap(49, 49, 49)
                                .addComponent(jt11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl12)
                                .addGap(49, 49, 49)
                                .addComponent(jt12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl13)
                                .addGap(49, 49, 49)
                                .addComponent(jt13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl14)
                                .addGap(49, 49, 49)
                                .addComponent(jt14, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl15)
                                .addGap(49, 49, 49)
                                .addComponent(jt15, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl16)
                                .addGap(49, 49, 49)
                                .addComponent(jt16, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_ModificarRegistrosLayout.createSequentialGroup()
                                .addComponent(jl17)
                                .addGap(49, 49, 49)
                                .addComponent(jt17, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jButton4))
                    .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel15)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jd_ModificarRegistrosLayout.setVerticalGroup(
            jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
            .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(5, 5, 5)
                .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jd_ModificarRegistrosLayout.createSequentialGroup()
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl10)
                            .addComponent(jt10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl11)
                            .addComponent(jt11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl12)
                            .addComponent(jt12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl13)
                            .addComponent(jt13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl14)
                            .addComponent(jt14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl15)
                            .addComponent(jt15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl16)
                            .addComponent(jt16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl17)
                            .addComponent(jt17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl18)
                            .addComponent(jt18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jd_ModificarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl19)
                            .addComponent(jt19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel16.setText("Listar Registros");

        jt_listarRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jt_listarRegistros);

        javax.swing.GroupLayout jd_ListarRegistrosLayout = new javax.swing.GroupLayout(jd_ListarRegistros.getContentPane());
        jd_ListarRegistros.getContentPane().setLayout(jd_ListarRegistrosLayout);
        jd_ListarRegistrosLayout.setHorizontalGroup(
            jd_ListarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ListarRegistrosLayout.createSequentialGroup()
                .addGroup(jd_ListarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_ListarRegistrosLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_ListarRegistrosLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel16)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jd_ListarRegistrosLayout.setVerticalGroup(
            jd_ListarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_ListarRegistrosLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel16)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText("Borrar Registros");

        jb_borrarRegis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jb_borrarRegis.setText("Eliminar");
        jb_borrarRegis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_borrarRegisActionPerformed(evt);
            }
        });

        jt_EliminarRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jt_EliminarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_EliminarRegistrosMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jt_EliminarRegistros);

        javax.swing.GroupLayout jd_BorrarRegistrosLayout = new javax.swing.GroupLayout(jd_BorrarRegistros.getContentPane());
        jd_BorrarRegistros.getContentPane().setLayout(jd_BorrarRegistrosLayout);
        jd_BorrarRegistrosLayout.setHorizontalGroup(
            jd_BorrarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_BorrarRegistrosLayout.createSequentialGroup()
                .addGroup(jd_BorrarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_BorrarRegistrosLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel17))
                    .addGroup(jd_BorrarRegistrosLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_BorrarRegistrosLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jb_borrarRegis)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jd_BorrarRegistrosLayout.setVerticalGroup(
            jd_BorrarRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_BorrarRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_borrarRegis)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu4.setText("Archivo");

        jMenuItem3.setText("Nuevo Archivo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem2.setText("Cargar Archivo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jm_SalvarArchivo.setText("Salvar Archivo");
        jm_SalvarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_SalvarArchivoActionPerformed(evt);
            }
        });
        jMenu4.add(jm_SalvarArchivo);

        jm_CerrarArchivo.setText("Cerrar Archivo");
        jm_CerrarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_CerrarArchivoActionPerformed(evt);
            }
        });
        jMenu4.add(jm_CerrarArchivo);

        jMenuItem6.setText("Salir");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuBar1.add(jMenu4);

        jMenu1.setText("Campo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jm_CrearCampos.setText("Crear Campos");
        jm_CrearCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_CrearCamposActionPerformed(evt);
            }
        });
        jMenu1.add(jm_CrearCampos);

        jm_ListarCampos.setText("Listar Campos");
        jm_ListarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_ListarCamposActionPerformed(evt);
            }
        });
        jMenu1.add(jm_ListarCampos);

        jm_ModificarCampos.setText("Modificar Campos");
        jm_ModificarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_ModificarCamposActionPerformed(evt);
            }
        });
        jMenu1.add(jm_ModificarCampos);

        jm_BorrarCampos.setText("Borrar Campos");
        jm_BorrarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_BorrarCamposActionPerformed(evt);
            }
        });
        jMenu1.add(jm_BorrarCampos);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Registro");

        jm_IntroducirRegistros.setText("Introducir Registros");
        jm_IntroducirRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_IntroducirRegistrosActionPerformed(evt);
            }
        });
        jMenu2.add(jm_IntroducirRegistros);

        jm_ModificarRegistros.setText("Modificar Registros");
        jm_ModificarRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_ModificarRegistrosActionPerformed(evt);
            }
        });
        jMenu2.add(jm_ModificarRegistros);

        jm_BuscarRegistros.setText("Buscar Registro");
        jMenu2.add(jm_BuscarRegistros);

        jm_BorrarRegistros.setText("Borrar  Registros");
        jm_BorrarRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_BorrarRegistrosActionPerformed(evt);
            }
        });
        jMenu2.add(jm_BorrarRegistros);

        jm_ListarRegistros.setText("Listar Registros");
        jm_ListarRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_ListarRegistrosActionPerformed(evt);
            }
        });
        jMenu2.add(jm_ListarRegistros);

        jMenuBar1.add(jMenu2);

        jMenu8.setText("Indice");

        jm_CrearIndice.setText("Crear Indice");
        jMenu8.add(jm_CrearIndice);

        jm_IndexarArchivos.setText("Re indexar Archivos");
        jMenu8.add(jm_IndexarArchivos);

        jMenuBar1.add(jMenu8);

        jMenu9.setText("Estandarizacion");

        jm_ExportarExcel.setText("Exportar a excel");
        jMenu9.add(jm_ExportarExcel);

        jm_ExportarXML.setText("Exportar a XML");
        jMenu9.add(jm_ExportarXML);

        jMenuBar1.add(jMenu9);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 508, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jm_CrearCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_CrearCamposActionPerformed
        for (int i = 0; i < listaCamps.size(); i++) {
            if (listaCamps.get(i).isKey() == true) {
                jLabel4.setEnabled(false);
                jLabel4.setVisible(false);
                cbb_llaveCampo.setEnabled(false);
                cbb_llaveCampo.setVisible(false);

            }
        }
        Jd_InsertarCampos.setModal(true);
        Jd_InsertarCampos.pack();
        Jd_InsertarCampos.setLocationRelativeTo(this);
        Jd_InsertarCampos.setVisible(true);

    }//GEN-LAST:event_jm_CrearCamposActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed


    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (listaCamps.size() < 10) {
            Campo campos = new Campo();

            String nombre = txt_NombreCampo.getText();
            int tamano = Integer.parseInt(txt_TamanoCapo.getText());

            String llave = cbb_llaveCampo.getSelectedItem().toString();
            String tipo = cbb_tipoCampo.getSelectedItem().toString();
            boolean key;

            if (llave.equals("Si")) {
                key = true;

            } else {
                key = false;
            }

            //campos =;
            // lista.agregarInicio(campos);

            listaCamps.add(new Campo(tipo, nombre, tamano, key));

            jm_IntroducirRegistros.setEnabled(true);
            jm_ListarCampos.setEnabled(true);
            jm_BorrarCampos.setEnabled(true);
            txt_NombreCampo.setText("");
            txt_TamanoCapo.setText("");
            cbb_llaveCampo.setSelectedIndex(0);
            cbb_tipoCampo.setSelectedIndex(0);
            jm_ModificarCampos.setEnabled(true);
            for (int i = 0; i < listaCamps.size(); i++) {
                DefaultComboBoxModel modelo1;
                modelo1 = new DefaultComboBoxModel(listaCamps.toArray());
                cb_modcampos.setModel(modelo1);
            }
            for (int i = 0; i < listaCamps.size(); i++) {
                if (listaCamps.get(i).isKey() == true) {
                    jLabel4.setEnabled(false);
                    jLabel4.setVisible(false);
                    cbb_llaveCampo.setEnabled(false);
                    cbb_llaveCampo.setVisible(false);
                }
            }
        } else {
            JOptionPane.showMessageDialog(Jd_InsertarCampos, "Solo se pueden ingresar 10 campos");
            txt_NombreCampo.setText("");
            txt_TamanoCapo.setText("");
            cbb_llaveCampo.setSelectedIndex(0);
            cbb_tipoCampo.setSelectedIndex(0);
        }
        //ablaCampos();
//        String usuari = cbb_tipoCampo.getText();
//        String contrasena = cbb_llaveCampo.getText();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Jd_CreaArchivo.setModal(true);
        Jd_CreaArchivo.pack();
        Jd_CreaArchivo.setLocationRelativeTo(this);
        Jd_CreaArchivo.setVisible(true);


    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void txt_nombreArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreArchivoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jm_CrearCampos.setEnabled(true);
        jm_SalvarArchivo.setEnabled(true);
        jm_CerrarArchivo.setEnabled(true);
        if (txt_nombreArchivo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar un nombre");
        } else {
            nombre_Achivo = txt_nombreArchivo.getText();
            txt_nombreArchivo.setText("");
            JOptionPane.showMessageDialog(Jd_CreaArchivo, "Agregado exitosamente");
            Jd_CreaArchivo.dispose();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jm_CerrarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_CerrarArchivoActionPerformed

        tablemodel = (DefaultTableModel) this.Tabla_Lista.getModel();

        int a = tablemodel.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tablemodel.removeRow(tablemodel.getRowCount() - 1);
        }

        tablemodel = (DefaultTableModel) this.jt_paraRegistros.getModel();
        a = jt_paraRegistros.getColumnCount() - 1;
        System.out.println("-------------------------------------");

        for (int i = a; i >= 0; i--) {
            System.out.println(i + " " + a);
            jt_paraRegistros.removeColumn(jt_paraRegistros.getColumnModel().getColumn(i));

        }

        listaCamps.clear();

        nombre_Achivo = "";

        jm_BorrarCampos.setEnabled(false);
        jm_ListarCampos.setEnabled(false);
        jm_ModificarCampos.setEnabled(false);
        jm_CrearCampos.setEnabled(false);
        jm_IntroducirRegistros.setEnabled(false);
        jm_BorrarRegistros.setEnabled(false);
        jm_ListarRegistros.setEnabled(false);
        jm_ModificarRegistros.setEnabled(false);
        jm_BuscarRegistros.setEnabled(false);
        jm_CrearIndice.setEnabled(false);
        jm_IndexarArchivos.setEnabled(false);
        jm_ExportarExcel.setEnabled(false);
        jm_ExportarXML.setEnabled(false);
        jm_SalvarArchivo.setEnabled(false);
        jm_CerrarArchivo.setEnabled(false);
    }//GEN-LAST:event_jm_CerrarArchivoActionPerformed

    private void jm_ListarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_ListarCamposActionPerformed
        tablemodel = (DefaultTableModel) this.Tabla_Lista.getModel();

        int a = tablemodel.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tablemodel.removeRow(tablemodel.getRowCount() - 1);
        }

        insertarTablaCampos();

        Jd_ListarCampos.setModal(true);
        Jd_ListarCampos.pack();
        Jd_ListarCampos.setLocationRelativeTo(this);
        Jd_ListarCampos.setVisible(true);
    }//GEN-LAST:event_jm_ListarCamposActionPerformed

    private void jm_SalvarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_SalvarArchivoActionPerformed
        tablaCampos();
        // ObjectInputStream camp = new ObjectInputStream(new FileInputStream("Campos del archivo"+nombre_Achivo));

    }//GEN-LAST:event_jm_SalvarArchivoActionPerformed

    private void jm_IntroducirRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_IntroducirRegistrosActionPerformed
        jm_BorrarCampos.setEnabled(false);
        jm_ListarCampos.setEnabled(false);
        jm_ModificarCampos.setEnabled(false);
        jm_CrearCampos.setEnabled(false);
        //columnas();

        System.out.println(labels.size());

        for (int i = 0; i < listaCamps.size(); i++) {
            labels.get(i).setVisible(true);
            labels.get(i).setEnabled(true);
            labels.get(i).setText(listaCamps.get(i).getNombre());
            fields.get(i).setVisible(true);
            fields.get(i).setEnabled(true);

        }
        
        tablaCampos();
        try {
            for (int j = 0; j < listaRegis.size(); j++) {
                for (int i = 0; i < listaRegis.get(j).getLista().size(); i++) {
                    tablemodel.setValueAt(listaRegis.get(j).getLista().get(i).getDato(), j, i);

                }
                tablemodel.addRow(new Object[j]);
            }

        } catch (Exception e) {

        }
        jd_IntoRegistros.setModal(true);
        jd_IntoRegistros.pack();
        jd_IntoRegistros.setLocationRelativeTo(this);
        jd_IntoRegistros.setVisible(true);

    }//GEN-LAST:event_jm_IntroducirRegistrosActionPerformed

    private void jm_BorrarRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_BorrarRegistrosActionPerformed
        try {
            DefaultTableModel modelo5 = new DefaultTableModel();
            ArrayList<Object> columnas = new ArrayList<Object>();
            for (int i = 0; i < listaCamps.size(); i++) {
                columnas.add(listaCamps.get(i));
            }
            for (Object columna : columnas) {
                modelo5.addColumn(columna);
            }
            this.jt_EliminarRegistros.setModel(modelo5);
            for (int i = 0; i < listaRegis.size(); i++) {
                Object[] filas = new Object[listaRegis.size()];
                for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
                    filas[j] = listaRegis.get(i).getLista().get(j).getDato();
                }
                modelo5.addRow(filas);
                jt_EliminarRegistros.setModel(modelo5);
            }
        } catch (Exception e) {

        }
        jd_BorrarRegistros.setModal(true);
        jd_BorrarRegistros.pack();
        jd_BorrarRegistros.setLocationRelativeTo(this);
        jd_BorrarRegistros.setVisible(true);

    }//GEN-LAST:event_jm_BorrarRegistrosActionPerformed

    private void jm_BorrarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_BorrarCamposActionPerformed
        tablemodel = (DefaultTableModel) this.Tabla_Lista1.getModel();

        int a = tablemodel.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tablemodel.removeRow(tablemodel.getRowCount() - 1);
        }

        insertarTablaCampos();

        jd_BorrarCampops.setModal(true);
        jd_BorrarCampops.pack();
        jd_BorrarCampops.setLocationRelativeTo(this);
        jd_BorrarCampops.setVisible(true);
        for (int i = 0; i < listaCamps.size(); i++) {
            DefaultComboBoxModel modelo1;
            modelo1 = new DefaultComboBoxModel(listaCamps.toArray());
            cb_modcampos.setModel(modelo1);
        }
    }//GEN-LAST:event_jm_BorrarCamposActionPerformed

    private void jb_borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_borrarMouseClicked
        // TODO add your handling code here:
        tablemodel = (DefaultTableModel) this.Tabla_Lista1.getModel();
        listaCamps.remove(this.Tabla_Lista1.getSelectedRow());
        tablemodel.removeRow(this.Tabla_Lista1.getSelectedRow());
    }//GEN-LAST:event_jb_borrarMouseClicked

    private void txt_TamanoCapoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TamanoCapoKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(Jd_InsertarCampos, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_txt_TamanoCapoKeyTyped

    private void txt_TamanoCapo1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TamanoCapo1KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(jd_ModificarCampos, "Ingresar solo numeros");
        }
    }//GEN-LAST:event_txt_TamanoCapo1KeyTyped

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int x = cb_modcampos.getSelectedIndex();
        String nombre = txt_NombreCampo1.getText();
        listaCamps.get(x).setNombre(nombre);
        int tamano = Integer.parseInt(txt_TamanoCapo1.getText());
        listaCamps.get(x).setSize(tamano);

        String llave = cbb_llaveCampo1.getSelectedItem().toString();
        String tipo = cbb_tipoCampo1.getSelectedItem().toString();
        listaCamps.get(x).setTipo(tipo);
        boolean key;

        if (llave.equals("Si")) {
            key = true;

        } else {
            key = false;
        }
        listaCamps.get(x).setKey(key);
        txt_NombreCampo1.setText("");
        txt_TamanoCapo1.setText("");
        cbb_llaveCampo1.setSelectedIndex(0);
        cbb_tipoCampo1.setSelectedIndex(0);
        for (int i = 0; i < listaCamps.size(); i++) {
            DefaultComboBoxModel modelo1;
            modelo1 = new DefaultComboBoxModel(listaCamps.toArray());
            cb_modcampos.setModel(modelo1);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jm_ModificarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_ModificarCamposActionPerformed
        // TODO add your handling code here:
        jd_ModificarCampos.setModal(true);
        jd_ModificarCampos.pack();
        jd_ModificarCampos.setLocationRelativeTo(this);
        jd_ModificarCampos.setVisible(true);
    }//GEN-LAST:event_jm_ModificarCamposActionPerformed

    private void cb_modcamposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_modcamposItemStateChanged
        // TODO add your handling code here:
        if (cb_modcampos.getSelectedIndex() >= 0) {
            Campo s = (Campo) cb_modcampos.getSelectedItem();
            txt_NombreCampo1.setText(s.getNombre());
            txt_TamanoCapo1.setText(Integer.toString(s.getSize()));
            String Tipo = s.getTipo();
            if (Tipo.equals("String")) {
                cbb_tipoCampo1.setSelectedIndex(0);
            } else if (Tipo.equals("Char")) {
                cbb_tipoCampo1.setSelectedIndex(1);
            } else if (Tipo.equals("Int")) {
                cbb_tipoCampo1.setSelectedIndex(2);
            } else if (Tipo.equals("Double")) {
                cbb_tipoCampo1.setSelectedIndex(3);
            }
            boolean key = s.isKey();
            if (key == true) {
                cbb_llaveCampo1.setSelectedIndex(1);
            } else {
                cbb_llaveCampo1.setSelectedIndex(0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un campo");
        }
    }//GEN-LAST:event_cb_modcamposItemStateChanged

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        try {
            JFileChooser chooser = new JFileChooser();
            //JFileChooser jfc = new JFileChooser("./");
            //FileNameExtensionFilter filtro = new FileNameExtensionFilter("Buscar Archivo");

            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

            chooser.getFileFilter();
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {

                if (nombre_Achivo == null || nombre_Achivo.equals(  "")) {
                    String archivo = chooser.getSelectedFile().getAbsolutePath();
                    archivo = archivo.substring(65);
                    System.out.println(archivo.length());
                    System.out.println(archivo);
                    nombre_Achivo = archivo.replace(".txt", "");
                    System.out.println(nombre_Achivo);
                }
            }

            Cargar(chooser.getSelectedFile().getAbsolutePath());

        } catch (Exception e) {

        }

        jm_SalvarArchivo.setEnabled(true);
        jm_CerrarArchivo.setEnabled(true);

        /*jd_CargarArchivo.setModal(true);
        jd_CargarArchivo.pack();
        jd_CargarArchivo.setLocationRelativeTo(this);
        jd_CargarArchivo.setVisible(true);*/
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void Cargar(String path) {

        Campo campo = new Campo();
        tablemodel = (DefaultTableModel) this.Tabla_Lista.getModel();

        String indicador;
        String key;
        String nombre;
        String size;
        String tipo;
        try {
            ObjectInputStream cargar = new ObjectInputStream(new FileInputStream(path));

            while (!(indicador = cargar.readObject().toString()).equals("")) {

                key = indicador;
                nombre = cargar.readObject().toString();
                size = cargar.readObject().toString();
                tipo = cargar.readObject().toString();

                System.out.println(nombre + key + size + tipo);

                campo = new Campo(tipo, nombre, Integer.parseInt(size), Boolean.parseBoolean(key));

                listaCamps.add(campo);

            }

            cargar.close();

        } catch (Exception e) {

        }

        insertarTablaCampos();
        tablaCampos();
        for (int i = 0; i < listaCamps.size(); i++) {
            DefaultComboBoxModel modelo1;
            modelo1 = new DefaultComboBoxModel(listaCamps.toArray());
            cb_modcampos.setModel(modelo1);
        }

        jm_BorrarCampos.setEnabled(true);
        jm_ListarCampos.setEnabled(true);
        jm_ModificarCampos.setEnabled(true);
        jm_CrearCampos.setEnabled(true);
        jm_IntroducirRegistros.setEnabled(true);

    }

 

    //------- in
    public void tablaCampos() {
        // NodoDoble flag = lista.inicio;

        tablemodel = (DefaultTableModel) this.jt_paraRegistros.getModel();
        TableColumnModel tcm = jt_paraRegistros.getColumnModel();

        int a = tablemodel.getColumnCount() - 1;


        for (int i = 0; i < listaCamps.size(); i++) {

            tablemodel.addColumn(listaCamps.get(i).getNombre());
            System.out.println(listaCamps.get(i));
            //flag = flag.siguiente;

        }

        try {

            ObjectOutputStream guardar = new ObjectOutputStream(new FileOutputStream(nombre_Achivo));
            //ObjectOutputStream guardar2 = new ObjectOutputStream(new FileOutputStream("Campos del archivo"+nombre_Achivo));

            for (int i = 0; i < listaCamps.size(); i++) {

                guardar.writeObject((Boolean.toString(listaCamps.get(i).isKey())));
                guardar.writeObject(listaCamps.get(i).getNombre());
                guardar.writeObject(listaCamps.get(i).getSize());
                guardar.writeObject(listaCamps.get(i).getTipo());

                // guardar2.writeObject(((Campo) flag.dato).getNombre());
                //flag = flag.siguiente;
            }

            guardar.close();

        } catch (Exception e) {

        }

        for (int i = a; i >= 0; i--) {
            System.out.println(i + " " + a);
            jt_paraRegistros.removeColumn(jt_paraRegistros.getColumnModel().getColumn(i));

        }

    }

    //--------------------------------------Inserta los campos a la Taboloa en el menu de  listar----------------------------------------
    public void insertarTablaCampos() {
        int filas = 0;

        tablemodel.addRow(new Object[0]);
        //NodoDoble flag = lista.inicio;

        try {

            for (int i = 0; i < listaCamps.size(); i++) {

                if (listaCamps.get(i).isKey() == true) {
                    tablemodel.setValueAt("Si", filas, 0);

                } else {
                    tablemodel.setValueAt("No", filas, 0);
                }

                tablemodel.setValueAt(listaCamps.get(i).getNombre(), filas, 1);
                tablemodel.setValueAt(listaCamps.get(i).getSize(), filas, 2);
                tablemodel.setValueAt(listaCamps.get(i).getTipo(), filas, 3);

                tablemodel.addRow(new Object[filas]);

                //flag = flag.siguiente;
                filas++;
            }

        } catch (Exception e) {

        }
    }

    //FIN DEL METODO
    public void columnas() {


        int a = modelo.getColumnCount() - 1;

        for (int i = 0; i < listaCamps.size(); i++) {
            modelo.addColumn(listaCamps.get(i).getNombre());
        }
        for (int i = a; i >= 0; i--) {
            System.out.println(i + " " + listaCamps.size());
            jt_paraRegistros.removeColumn(jt_paraRegistros.getColumnModel().getColumn(i));

        }

    }


    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        for (int i = 0; i < listaRegis.size(); i++) {
            for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
                System.out.println("datos");
                System.out.println(listaRegis.get(i).getLista().get(j).getDato());
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void cbb_tipoCampoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbb_tipoCampoKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbb_tipoCampoKeyPressed

    private void cbb_tipoCampoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_tipoCampoItemStateChanged
        // TODO add your handling code here:
        if (cbb_tipoCampo.getSelectedIndex() == 2) {
            jLabel2.setEnabled(false);
            jLabel2.setVisible(false);
            txt_TamanoCapo.setEnabled(false);
            txt_TamanoCapo.setVisible(false);
            txt_TamanoCapo.setText("0");
        } else {
            jLabel2.setEnabled(true);
            jLabel2.setVisible(true);
            txt_TamanoCapo.setEnabled(true);
            txt_TamanoCapo.setVisible(true);
        }
    }//GEN-LAST:event_cbb_tipoCampoItemStateChanged

    private void jd_IntoRegistrosWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jd_IntoRegistrosWindowOpened
        // TODO add your handling code here:
        JLabel e = new JLabel("Nombre");
        e.setBounds(10, 20, 80, 20);
        int x = 10, y = 20, w = 80, h = 20;

        for (int i = 0; i < listaCamps.size(); i++) {

        }
    }//GEN-LAST:event_jd_IntoRegistrosWindowOpened

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel  tablemodel3 = (DefaultTableModel) this.jt_paraRegistros.getModel();
        
        
        
        ArrayList<Campo> campos2 = new ArrayList();
//        campos2 = listaCamps;
        Registro r = new Registro();
        String dato = "";
        
        for (int i = 0; i < listaCamps.size(); i++) {
           
             r.getLista().add(new Campo(listaCamps.get(i).getTipo(),listaCamps.get(i).getNombre(),listaCamps.get(i).getSize(),listaCamps.get(i).isKey()));
            
         }
        
        
        for (int i = 0; i < listaCamps.size(); i++) {
            
            dato = fields.get(i).getText();
            
            System.out.println("hola" +dato);

            r.getLista().get(i).setDato(dato);
        }
        

        listaRegis.add(r);
        
        
//        for (int i = 0; i < listaRegis.size(); i++) {
//            for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
//                
//                System.out.println("estos si son" + listaRegis.get(i).getLista().get(j).getDato());
//            }
//        }

        tablemodel3.addRow(new Object[0]);
        //NodoDoble flag = lista.inicio;

//        try {
            for (int j = 0; j < listaRegis.size() ; j++) {
                
                
                    
                System.out.println("pepsi: " +tablemodel3.getColumnCount());
                
                
                for (int i = 0; i <  listaRegis.get(j).getLista().size(); i++) {
                    
                    System.out.println("dejate de pajas: "+listaRegis.get(j).getLista().get(i).getDato());
                    tablemodel3.setValueAt(listaRegis.get(j).getLista().get(i).getDato(), j, i);

                }
                tablemodel3.addRow(new Object[j]);
            }
            
            
            

//        } catch (Exception e) {
//
//        }
        for (int i = 0; i < fields.size(); i++) {
            fields.get(i).setText("");
        }
        jm_BorrarRegistros.setEnabled(true);
        jm_ListarRegistros.setEnabled(true);
        jm_ModificarRegistros.setEnabled(true);
        jm_BuscarRegistros.setEnabled(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    
    
    //codigo para las validaciones ------------------------------------------------------------
    private void jt0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt0KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(0).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt0.getText().length() > listaCamps.get(0).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt0KeyTyped

    private void jt1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt1KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(1).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt1.getText().length() > listaCamps.get(1).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt1KeyTyped

    private void jt2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt2KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(2).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt2.getText().length() > listaCamps.get(2).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt2KeyTyped

    private void jt3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt3KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(3).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt3.getText().length() > listaCamps.get(3).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt3KeyTyped

    private void jt4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt4KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(4).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt4.getText().length() > listaCamps.get(4).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt4KeyTyped

    private void jt5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt5KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(5).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt5.getText().length() > listaCamps.get(5).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt5KeyTyped

    private void jt6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt6KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(6).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt6.getText().length() > listaCamps.get(6).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt6KeyTyped

    private void jt7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt7KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(7).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt7.getText().length() > listaCamps.get(7).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt7KeyTyped

    private void jt8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt8KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(8).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt8.getText().length() > listaCamps.get(8).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt8KeyTyped

    private void jt9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt9KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(9).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(9).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt9KeyTyped

    private void jt10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt10KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(0).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(0).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt10KeyTyped

    private void jt11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt11KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(1).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(1).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt11KeyTyped

    private void jt12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt12KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(2).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(2).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt12KeyTyped

    private void jt13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt13KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(3).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(3).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt13KeyTyped

    private void jt14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt14KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(4).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(4).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt14KeyTyped

    private void jt15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt15KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(5).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(5).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt15KeyTyped

    private void jt16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt16KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(6).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(6).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt16KeyTyped

    private void jt17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt17KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(7).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(7).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt17KeyTyped

    private void jt18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt18KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(8).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(8).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt18KeyTyped

    private void jt19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt19KeyTyped
        // TODO add your handling code here:
        if (listaCamps.get(9).getTipo().equals("Int")) {
            char validar = evt.getKeyChar();
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar solo numeros");
            }
        } else if (jt9.getText().length() > listaCamps.get(9).getSize()) {
            JOptionPane.showMessageDialog(jd_IntoRegistros, "Ingresar el tamaño adecuado del campo");
        }
    }//GEN-LAST:event_jt19KeyTyped
    //codigo para las validaciones ------------------------------------------------------------
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jm_ModificarRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_ModificarRegistrosActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < listaCamps.size(); i++) {
            labels2.get(i).setVisible(true);
            labels2.get(i).setEnabled(true);
            labels2.get(i).setText(listaCamps.get(i).getNombre());
            fields2.get(i).setVisible(true);
            fields2.get(i).setEnabled(true);

        }
        try {
            DefaultTableModel modelo5 = new DefaultTableModel();
            ArrayList<Object> columnas = new ArrayList<Object>();
            for (int i = 0; i < listaCamps.size(); i++) {
                columnas.add(listaCamps.get(i));
            }
            for (Object columna : columnas) {
                modelo5.addColumn(columna);
            }
            this.jt_ModificarRegistros.setModel(modelo5);
            for (int i = 0; i < listaRegis.size(); i++) {
                Object[] filas = new Object[listaRegis.size()];
                for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
                    filas[j] = listaRegis.get(i).getLista().get(j).getDato();
                }
                modelo5.addRow(filas);
                jt_ModificarRegistros.setModel(modelo5);
            }
        } catch (Exception e) {

        }
        jd_ModificarRegistros.setModal(true);
        jd_ModificarRegistros.pack();
        jd_ModificarRegistros.setLocationRelativeTo(this);
        jd_ModificarRegistros.setVisible(true);
    }//GEN-LAST:event_jm_ModificarRegistrosActionPerformed

    private void jm_ListarRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_ListarRegistrosActionPerformed
        // TODO add your handling code here:
//        tablemodel = (DefaultTableModel) this.jt_paraRegistros7.getModel();
//        DefaultTableModel tablemodel2 = (DefaultTableModel) this.jt_paraRegistros.getModel();
//        int x = tablemodel2.getColumnCount() -1;
//        for (int i = x; i >= 0; i--) {
//            System.out.println(i + " " + listaCamps.size());
//            System.out.println(jt_paraRegistros.getColumnCount());
//            jt_paraRegistros7.removeColumn(jt_paraRegistros7.getColumnModel().getColumn(i));
//
//        
//}
        try {
            DefaultTableModel modelo5 = new DefaultTableModel();
            ArrayList<Object> columnas = new ArrayList<Object>();
            for (int i = 0; i < listaCamps.size(); i++) {
                columnas.add(listaCamps.get(i));
            }
            for (Object columna : columnas) {
                modelo5.addColumn(columna);
            }
            this.jt_listarRegistros.setModel(modelo5);
            for (int i = 0; i < listaRegis.size(); i++) {
                Object[] filas = new Object[listaRegis.size()];
                for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
                    filas[j] = listaRegis.get(i).getLista().get(j).getDato();
                }
                modelo5.addRow(filas);
                jt_listarRegistros.setModel(modelo5);
            }
        } catch (Exception e) {

        }
//        ArrayList<Object> columnas = new ArrayList<Object>();
//        for (int i = 0; i < listaCamps.size(); i++) {
//            columnas.add(listaCamps.get(i));
//        }
//        for(Object columna: columnas){
//            modelo5.addColumn(columna);
//        }
//        this.jt_listarRegistros.setModel(modelo5);
//        ArrayList<Object[]> filas = new ArrayList<Object[]>();
//        for (int i = 0; i < listaRegis.size(); i++) {
//            Object[] dato=null;
//            for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
//                dato = new Object[]{listaRegis.get(i).getLista().get(j).getDato()};
//            }
//            filas.add(dato);
//        }
//        for(Object [] fila:filas){
//            modelo5.addRow(fila);
//        }
//        jt_listarRegistros.setModel(modelo5);

        jd_ListarRegistros.setModal(true);
        jd_ListarRegistros.pack();
        jd_ListarRegistros.setLocationRelativeTo(this);
        jd_ListarRegistros.setVisible(true);
    }//GEN-LAST:event_jm_ListarRegistrosActionPerformed

    private void jt_ModificarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_ModificarRegistrosMouseClicked
        // TODO add your handling code here:
        int i = jt_ModificarRegistros.rowAtPoint(evt.getPoint());
        for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
            fields2.get(j).setText(listaRegis.get(i).getLista().get(j).getDato());
        }
    }//GEN-LAST:event_jt_ModificarRegistrosMouseClicked

    private void jt_EliminarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_EliminarRegistrosMouseClicked
        // TODO add your handling code here:
        eliminado = jt_EliminarRegistros.rowAtPoint(evt.getPoint());
    }//GEN-LAST:event_jt_EliminarRegistrosMouseClicked

    private void jb_borrarRegisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_borrarRegisActionPerformed
        // TODO add your handling code here:
        listaRegis.remove(eliminado);
        try {
            DefaultTableModel modelo5 = new DefaultTableModel();
            for (int i = 0; i < listaRegis.size(); i++) {
                Object[] filas = new Object[listaRegis.size()];
                for (int j = 0; j < listaRegis.get(i).getLista().size(); j++) {
                    filas[j] = listaRegis.get(i).getLista().get(j).getDato();
                }
                modelo5.addRow(filas);
                jt_EliminarRegistros.setModel(modelo5);
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_jb_borrarRegisActionPerformed

    public static boolean isNumeric(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Jd_CreaArchivo;
    private javax.swing.JDialog Jd_InsertarCampos;
    private javax.swing.JDialog Jd_ListarCampos;
    private javax.swing.JTable Tabla_Lista;
    private javax.swing.JTable Tabla_Lista1;
    private javax.swing.JComboBox<String> cb_modcampos;
    private javax.swing.JComboBox<String> cbb_llaveCampo;
    private javax.swing.JComboBox<String> cbb_llaveCampo1;
    private javax.swing.JComboBox<String> cbb_tipoCampo;
    private javax.swing.JComboBox<String> cbb_tipoCampo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jb_borrar;
    private javax.swing.JButton jb_borrarRegis;
    private javax.swing.JDialog jd_BorrarCampops;
    private javax.swing.JDialog jd_BorrarRegistros;
    private javax.swing.JDialog jd_InsertarRegistros;
    private javax.swing.JDialog jd_IntoRegistros;
    private javax.swing.JDialog jd_ListarRegistros;
    private javax.swing.JDialog jd_ModificarCampos;
    private javax.swing.JDialog jd_ModificarRegistros;
    private javax.swing.JLabel jl0;
    private javax.swing.JLabel jl1;
    private javax.swing.JLabel jl10;
    private javax.swing.JLabel jl11;
    private javax.swing.JLabel jl12;
    private javax.swing.JLabel jl13;
    private javax.swing.JLabel jl14;
    private javax.swing.JLabel jl15;
    private javax.swing.JLabel jl16;
    private javax.swing.JLabel jl17;
    private javax.swing.JLabel jl18;
    private javax.swing.JLabel jl19;
    private javax.swing.JLabel jl2;
    private javax.swing.JLabel jl3;
    private javax.swing.JLabel jl4;
    private javax.swing.JLabel jl5;
    private javax.swing.JLabel jl6;
    private javax.swing.JLabel jl7;
    private javax.swing.JLabel jl8;
    private javax.swing.JLabel jl9;
    private javax.swing.JMenuItem jm_BorrarCampos;
    private javax.swing.JMenuItem jm_BorrarRegistros;
    private javax.swing.JMenuItem jm_BuscarRegistros;
    private javax.swing.JMenuItem jm_CerrarArchivo;
    private javax.swing.JMenuItem jm_CrearCampos;
    private javax.swing.JMenuItem jm_CrearIndice;
    private javax.swing.JMenuItem jm_ExportarExcel;
    private javax.swing.JMenuItem jm_ExportarXML;
    private javax.swing.JMenuItem jm_IndexarArchivos;
    private javax.swing.JMenuItem jm_IntroducirRegistros;
    private javax.swing.JMenuItem jm_ListarCampos;
    private javax.swing.JMenuItem jm_ListarRegistros;
    private javax.swing.JMenuItem jm_ModificarCampos;
    private javax.swing.JMenuItem jm_ModificarRegistros;
    private javax.swing.JMenuItem jm_SalvarArchivo;
    private javax.swing.JTextField jt0;
    private javax.swing.JTextField jt1;
    private javax.swing.JTextField jt10;
    private javax.swing.JTextField jt11;
    private javax.swing.JTextField jt12;
    private javax.swing.JTextField jt13;
    private javax.swing.JTextField jt14;
    private javax.swing.JTextField jt15;
    private javax.swing.JTextField jt16;
    private javax.swing.JTextField jt17;
    private javax.swing.JTextField jt18;
    private javax.swing.JTextField jt19;
    private javax.swing.JTextField jt2;
    private javax.swing.JTextField jt3;
    private javax.swing.JTextField jt4;
    private javax.swing.JTextField jt5;
    private javax.swing.JTextField jt6;
    private javax.swing.JTextField jt7;
    private javax.swing.JTextField jt8;
    private javax.swing.JTextField jt9;
    private javax.swing.JTable jt_EliminarRegistros;
    private javax.swing.JTable jt_ModificarRegistros;
    private javax.swing.JTable jt_listarRegistros;
    private javax.swing.JTable jt_paraRegistros;
    private javax.swing.JTextField txt_NombreCampo;
    private javax.swing.JTextField txt_NombreCampo1;
    private javax.swing.JTextField txt_TamanoCapo;
    private javax.swing.JTextField txt_TamanoCapo1;
    private javax.swing.JTextField txt_nombreArchivo;
    // End of variables declaration//GEN-END:variables
}
